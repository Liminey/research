!!!Базовый функционал:

1) pwd - Показать, в какой директории я нахожусь
2) cd - Сменить директорию
=======================================================================================
Если в названии файла есть пробелы, то нужно использовать кавычки ("").
Что-бы вернутся в родительскую директорию, вместо названия файла, нужно написать (..). 
Для обращения к текущей директории, нужно написать (.).
Для перехода через несколько директорий, нужно использовать (/).
Переход на домашнюю директорию (~).
=======================================================================================
3) ls - Вывести содержимое директории
=======================================================================================
Что-бы отобразить скрытые файлы, нужно добавить (-a).
Так-же она может вывести содержимое домашней директории (~). 
Вывод предыдущей директории (..).
=======================================================================================
4)touch %ИМЯ_ФАЙЛА% - Создание файла
=======================================================================================
Для создания файла в домашней директории, надо ввести символ (~).
Что-бы создать файл в родительской директории надо ввести (..).
=======================================================================================
5)mkdir - Создание директории через терминал
=======================================================================================
Для создания целой структуры директорий одной командой, надо написать (-p). 
Для создания директории в домашней директории, надо ввести символ (~).
Что-бы создать директорию в родительской директории надо ввести (..).
=======================================================================================
6)cp что_копируем куда_копируем - Копирование файлов
7)mv что_перемещаем куда_перемещаем - Перемещение файлов 
8)cat - Чтение файлов (Работает только с текстовыми файлами)
9)rm - Удалить файл
=======================================================================================
Для рекурсивного удаления файлов и директорий нужно ввести (-r).
=======================================================================================
10)rmdir - Удалить директорию

!!!Эффективная работа с командой строкой:

&& - Для выполнения сразу нескольких команд за раз.
Нажатие Tab - Автозаполнение (Работает с командами, директориями и папками)

!!!Работа с файлом настройки .git config

11)git config --global user.name "ИМЯ_ПОЛЬЗОВАТЕЛЯ%" - Для создания имени пользователя
12)git config --global user.email "ПОЧТА_ПОЛЬЗОВАТЕЛЯ%" - Для указания почты

!!!Работа с репозиторием

13)git init - Создать репозиторий
14)rm -rf .git - Удалить случайно созданный репозиторий (Или руками удалить папку .git) 
15)git status - Показать текущее состояние репозитория (Название текущей ветки, сообщение 
о наличии коммитов, сообщение просящее что-то закоммитить)
16)git add - добавить файл с список отслеживаемых
=======================================================================================
Для добавления всех файлов в репозитории за раз, нужно написать (--all).
Точно так-же, но подругому можно написать (.).
=======================================================================================
17)git commit -m '<СООБЩЕНИЕ>' - Создание коммита с сообщением
18)git log - Показать историю коммитов

!!!Работа с SSH-ключом

Это виртуальный идентификатор в GitHub. Файл с расширением .pub - публичный. Без 
расширения приватный.

19)ssh-keygen -t ed25519 -C "<электронная почта, привязанная к GitHub>" - Для генерации 
SSH-ключа
20)clip < ~/.ssh/id_ed25519.pub - Скопировать содержимое ключа в бувер обмена
21)ssh -T git@github.com - для проверки правильности ключа (https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/githubs-ssh-key-fingerprints)

!!!Связывание локального и удаленного репозитория

22)git remote add origin <Его URL> - Привязка удаленного репозитория к 
локальному
23)git remote -v - чтобы убедится, что репозитории связаны.
=======================================================================================
Для подробной информации в выводе, нужно вместо -v, написать (--verbose).
=======================================================================================

24)git push - Отправить изменения на уделенный репозиторий.
=======================================================================================
Если команда вводится первый раз, то нужно дополнительно добавить (-u origin master). 
=======================================================================================

!!!Файл README.md
=======================================================================================
Он содержит:
1)Название проекта и его краткое описание: кем создан, для чего, какие решает задачи и 
какие закрывает проблемы.
2)Технологии, которые применяются в проекте. В чём его отличие от аналогичных.
3)Документация проекта — подробная инструкция о том, что представляет собой проект.
4)Планы проекта, если они есть.
=======================================================================================
